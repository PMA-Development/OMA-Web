@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@inject NavigationManager Navigation
@inject IAccessTokenProvider AccessTokenProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Windmills</PageTitle>
@* <AuthorizeView Roles="Hotline-User"> *@
<h3>Data Fetching</h3>

<button @onclick="GetAccessToken">Get Access Token</button>

<p>@accessToken</p>
@* </AuthorizeView> *@
<div>
    <input placeholder="Search..." class="form-control searchbar" />
</div>

<div class="home col-12 d-flex flex-column mt-5">
    <div class="flex-row d-flex justify-content-evenly">
        <div class="col-4">
            <!-- First -->
            <div class="card" @onclick="() => {Redirect(1);}">
                <div class="card-title ">
                    <h2>Nordsø 1</h2>
                </div>
                <div class="card-body success">
                    <h5>High Priority</h5>
                    <p>Task 1</p>
                    <p>Task 2</p>
                    <p>Task 3</p>
                    <p>Task 4</p>
                </div>
            </div>
        </div>
        <div class="col-4">
            <!-- Two -->
            <div class="card" @onclick="() => {Redirect(2);}">
                <div class="card-title">
                    <h2>Nordsø 2</h2>
                </div>
                <div class="card-body success">
                    <h5>High Priority</h5>
                    <p>Task 1</p>
                    <p>Task 2</p>
                    <p>Task 3</p>
                    <p>Task 4</p>
                </div>
            </div>
        </div>
    </div>

    <div class="flex-row d-flex justify-content-evenly mt-5">
        <div class="col-4">
            <!-- Third -->
            <div class="card" @onclick="() => {Redirect(3);}">
                <div class="card-title">
                    <h2>Nordsø 3</h2>
                </div>
                <div class="card-body success">
                    <h5>High Priority</h5>
                    <p>Task 1</p>
                    <p>Task 2</p>
                    <p>Task 3</p>
                    <p>Task 4</p>
                </div>
            </div>
        </div>
        <div class="col-4">

            <!-- Four -->
            <div class="card" @onclick="() => {Redirect(4);}">
                <div class="card-title">
                    <h2>Nordsø 4</h2>
                </div>
                <div class="card-body error">
                    <h5>High Priority</h5>
                    <p>Task 1</p>
                    <p>Task 2</p>
                    <p>Task 3</p>
                    <p>Task 4</p>
                </div>
            </div>

        </div>
    </div>
</div>

@code {

    private ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var isAdmin = user.IsInRole("Hotline-User"); // Check for a specific role
                                                  // Perform actions based on role
        }
    }

    private string accessToken;

    private async Task GetAccessToken()
    {
        var result = await AccessTokenProvider.RequestAccessToken();

        if (result.TryGetToken(out var token))
        {
            accessToken = token.Value; // This is the access token
        }
        else
        {
            accessToken = "No access token available.";
        }
    }

    public void Redirect(int id)
    {
        Navigation.NavigateTo("/windmills/" + id);
    }
}





