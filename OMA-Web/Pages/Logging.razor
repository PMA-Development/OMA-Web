@page "/logging"

<RadzenStack Gap="1rem" >
    <RadzenDataGrid AllowRowSelectOnRowClick="true" Data="@logs" FilterMode="FilterMode.Simple" AllowVirtualization="true" Style="height:90vh"
    AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
    AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn Property="@nameof(LogDTO.LogID)" Title="ID" />
            <RadzenDataGridColumn Property="@nameof(LogDTO.Description)" Title="Description" />
            <RadzenDataGridColumn Property="@nameof(LogDTO.Severity)" Title="Severity" />
            <RadzenDataGridColumn Property="@nameof(LogDTO.UserID)" Title="UserID" />
            <RadzenDataGridColumn Property="@nameof(LogDTO.Time)" Title="Time" />
        </Columns>
    </RadzenDataGrid>
</RadzenStack>


@code {
    IEnumerable<LogDTO> logs;


    protected override async Task OnInitializedAsync()
    {
        logs = await client.GetLogsAsync();
    }
}
